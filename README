NAME
    RT::Extension::DBCustomField - Connect databases to custom fields

VERSION
    version 1.1.0

RT VERSION
    Works with RT 4.4.2

INSTALLATION
    perl Makefile.PL
    make
    make install
        May need root permissions

    Edit your /opt/rt4/etc/RT_SiteConfig.pm
            Plugin('RT::Extension::DBCustomField');

    Clear your mason cache
            rm -rf /opt/rt4/var/mason_data/obj

    Restart your webserver

CONFIGURATION
    You need to specify $DBCustomField_Connections which is a hash of
    connections.

       Set($DBCustomField_Connections, {
         'sugarcrm' => {
           'dsn'      => 'DBI:mysql:database=SUGARCRMDB;host=MYHOST;port=3306;mysql_enable_utf8=1',
           'username'    => 'USER',
           'password'    => 'PASS',
           'autoconnect'  => 1
         }
       });

    This cannection is then used to define the specific queries. The key
    identifies the values returned for later CF assignment. The 'connection'
    identifier is linked to the specified connection above.

        Set ($DBCustomField_Queries, {
                'companies' => {

                    'connection'    => 'sugarcrm',

                        'query' => q{
                                SELECT
                                __DBCF_FIELDS__
                                from accounts a
                                inner join accounts_cstm cstm on cstm.id_c = a.id and cstm.net_global_id_c
                                WHERE a.deleted=0 __DBCF_AND_WHERE__
                                order by shortname
                                LIMIT 300;
                        },

                        'searchfields'  => ['cstm.shortname_c', 'a.name', 'cstm.net_global_id_c'],
                        'searchop'      => 'OR',

                        'fields'         => {
                          'shortname'  => 'cstm.shortname_c',
                          'globalid'  => 'cstm.net_global_id_c',
                          'name'    => 'a.name'
                        },

                        'field_id' => 'cstm.net_global_id_c',

                        'field_id_type' => 'string', # (Default is int)

                        'field_tpl' => q{
                          <div>
                            <tpl if="shortname">
                              <div><span style="font-weight: bold;">{shortname}</span></div>
                            </tpl>
                            <div>{name} (<span style="font-weight: bold;">{globalid}</span>)</div>
                          </div>
                         },

                         'field_config' => {},

                        'returnquery'   => q{
                                SELECT
                                        __DBCF_FIELDS__
                                from accounts a
                                inner join accounts_cstm cstm on cstm.id_c = a.id and cstm.net_global_id_c
                                where cstm.net_global_id_c=?
                                LIMIT 100
                        },

                        'returnfields'         => {
                          'shortname'  => 'cstm.shortname_c',
                          'globalid'  => 'cstm.net_global_id_c',
                          'name'    => 'a.name'
                        },

                        'returnfield_id' => 'cstm.net_global_id_c',

                        'returnfield_config' => {
                          height => 50
                        },

                        'returnfield_tpl' => q{
                          <div>
                            <tpl if="shortname">
                              <div><span style="font-weight: bold;">{shortname}</span></div>
                            </tpl>
                            <div>{name} (<span style="font-weight: bold;">{globalid}</span>)</div>
                          </div>
                        },

                        'returnfield_small_tpl' => q{{shortname} ({globalid})}


          },
        });

    You need to map the database queries into custom fields. One query can
    be used for multiple fields if needed.

        Set($DBCustomField_Fields, {
          'client' => 'companies'
        });

AUTHOR
    NETWAYS GmbH <support@netways.de>

BUGS
    All bugs should be reported on GitHub
    <https://github.com/NETWAYS/rt-extension-dbcustomfield>

COPYRIGHT AND LICENSE
    This software is Copyright (c) 2018 by NETWAYS GmbH <support@netways.de>

    This is free software, licensed under: GPL Version 2, June 1991

